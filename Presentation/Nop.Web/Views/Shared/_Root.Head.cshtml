@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Services.Security
@using Nop.Core.Events

@inject CatalogSettings catalogSettings
@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject SeoSettings seoSettings

@{
	// Append necessary scripts for catalog pages
	if (catalogSettings.DisplayAllPicturesOnCatalogPages)
	{
		NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/swiper/swiper-bundle.min.js");
	}
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");

	// Add jQuery migrate script conditionally
	if (commonSettings.JqueryMigrateScriptLoggingActive)
	{
		NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.js");
	}
	else
	{
		NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
	}

	// Append other necessary scripts
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
	NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery/jquery.min.js");

	// Custom head tags for SEO
	if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
	{
		NopHtml.AppendHeadCustomParts(seoSettings.CustomHeadTags);
	}

	// Trigger PageRenderingEvent
	await eventPublisher.PublishAsync(new PageRenderingEvent(NopHtml));

	// Generate dynamic title, description, and keywords
	var title = await NopHtml.GenerateTitleAsync();
	var description = await NopHtml.GenerateMetaDescriptionAsync();
	var keywords = await NopHtml.GenerateMetaKeywordsAsync();
}
<!DOCTYPE html>
<html lang="@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName" dir="@Html.GetUIDirection(!await Html.ShouldUseRtlThemeAsync())" class="@NopHtml.GeneratePageCssClasses()">
<head>
	<title>@title</title>

	<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
	<meta name="description" content="@description" />
	<meta name="keywords" content="@keywords" />
	<meta name="generator" content="nopCommerce" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />

	@NopHtml.GenerateHeadCustom()

	@* This is used so that themes can inject content into the header *@
	@await Html.PartialAsync("Head")

	@NopHtml.GenerateCssFiles()

	@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeadHtmlTag })
	@NopHtml.GenerateCanonicalUrls()
	@await Component.InvokeAsync(typeof(NewsRssHeaderLinkViewComponent))
	@await Component.InvokeAsync(typeof(BlogRssHeaderLinkViewComponent))

	@* Insert favicon and app icons head code *@
	@await Component.InvokeAsync(typeof(FaviconViewComponent))

	@NopHtml.GenerateScripts(ResourceLocation.Head)
	@NopHtml.GenerateInlineScripts(ResourceLocation.Head)

	<!-- Powered by nopCommerce - https://www.nopCommerce.com -->
	@Html.Raw(commonSettings.HeaderCustomHtml)

	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
</head>
<body>
	<nop-antiforgery-token />
	@RenderBody()

	@NopHtml.GenerateScripts(ResourceLocation.Footer)
	@NopHtml.GenerateInlineScripts(ResourceLocation.Footer)

	@Html.Raw(commonSettings.FooterCustomHtml)
</body>
</html>
